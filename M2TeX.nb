(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    200159,       4178]
NotebookOptionsPosition[    191457,       3887]
NotebookOutlinePosition[    191831,       3903]
CellTagsIndexPosition[    191788,       3900]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["M2TeX Demo", "Title",
 CellChangeTimes->{{3.722585418481227*^9, 3.7225854281057777`*^9}, {
  3.722613703089669*^9, 3.7226137037596703`*^9}, {3.722713350752735*^9, 
  3.722713352045809*^9}}],

Cell[BoxData[
 RowBox[{"<<", "M2TeX`"}]], "Input",
 CellChangeTimes->{{3.7226269333035946`*^9, 3.7226269357135983`*^9}}],

Cell[CellGroupData[{

Cell["List", "Section",
 CellChangeTimes->{{3.722714080694485*^9, 3.722714081165512*^9}}],

Cell["Full definition of list", "Text",
 CellChangeTimes->{{3.7227140840566773`*^9, 3.7227140887229443`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"M2TeXList", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<value\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<op2\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<op3\>\"", ",", "\"\<op4\>\""}], "}"}]}], "}"}]}], "}"}],
     ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<Seperator\>\"", "\[Rule]", "\"\<<>\>\""}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<OpenCloseCharacter\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<<Open>\>\"", ",", "\"\<<Close>\>\""}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "M2TeXToString"}]}], "Input",
 CellChangeTimes->{{3.7227141772230062`*^9, 3.7227142071747193`*^9}, {
  3.7227142399055915`*^9, 3.7227142711843805`*^9}}],

Cell[BoxData["\<\"<Open>value<>op2<>op3<>op4<Close>\"\>"], "Output",
 CellChangeTimes->{{3.722714180473192*^9, 3.722714207785754*^9}, 
   3.7227142726004615`*^9, {3.722714304163267*^9, 3.72271431750603*^9}, {
   3.7227144518057117`*^9, 3.722714459783168*^9}, 3.722714774734182*^9}]
}, Open  ]],

Cell["Empty list is none", "Text",
 CellChangeTimes->{{3.7227147768163013`*^9, 3.7227147803925056`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"M2TeXList", "[", "None", "]"}]], "Input",
 CellChangeTimes->{{3.7227147820015974`*^9, 3.722714788396963*^9}}],

Cell[BoxData["None"], "Output",
 CellChangeTimes->{3.722714788722982*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Section",
 CellChangeTimes->{{3.722584193248643*^9, 3.7225841945857196`*^9}}],

Cell["Default for options also works with list of options", "Text",
 CellChangeTimes->{{3.7225842517189875`*^9, 3.7225842819127145`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"M2TeXOption", "[", "\"\<value\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "M2TeXToString"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M2TeXOption", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<value\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<op2\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"\"\<op3\>\"", ",", "\"\<op4\>\""}], "}"}]}], "}"}]}], "}"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "M2TeXToString"}]}], "Input",
 CellChangeTimes->{{3.7225842649807463`*^9, 3.7225843089112587`*^9}}],

Cell[BoxData["\<\"{value}\"\>"], "Output",
 CellChangeTimes->{
  3.7226829155039406`*^9, 3.7227140393551207`*^9, 3.7227141657213483`*^9, {
   3.722714304172267*^9, 3.72271431751303*^9}, {3.7227144531177864`*^9, 
   3.7227144597901683`*^9}}],

Cell[BoxData["\<\"{value, op2, op3, op4}\"\>"], "Output",
 CellChangeTimes->{
  3.7226829155039406`*^9, 3.7227140393551207`*^9, 3.7227141657213483`*^9, {
   3.722714304172267*^9, 3.72271431751303*^9}, {3.7227144531177864`*^9, 
   3.722714459793168*^9}}]
}, Open  ]],

Cell["Optional options", "Text",
 CellChangeTimes->{{3.7225843151806173`*^9, 3.7225843224250317`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"M2TeXOptionOptional", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<optional1\>\"", ",", "\"\<optional2\>\""}], "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "M2TeXToString"}]}], "Input",
 CellChangeTimes->{{3.722584324527152*^9, 3.7225843539758368`*^9}}],

Cell[BoxData["\<\"[optional1, optional2]\"\>"], "Output",
 CellChangeTimes->{
  3.722682915509941*^9, 3.72271404056819*^9, {3.722714304180268*^9, 
   3.722714317522031*^9}, {3.7227144542008486`*^9, 3.7227144597991686`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Commands", "Section",
 CellChangeTimes->{{3.7225847800627117`*^9, 3.722584781587799*^9}}],

Cell["Full definition", "Text",
 CellChangeTimes->{{3.7225847844459624`*^9, 3.7225847874551344`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"M2TeXCommand", "[", "\[IndentingNewLine]", 
   RowBox[{"\"\<dostuff\>\"", ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<Parameter\>\"", "\[Rule]", "\"\<val1\>\""}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<ParameterOptional\>\"", "\[Rule]", "\"\<val2\>\""}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<ParameterList\>\"", "\[Rule]", "None"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<StartCharacter\>\"", "\[Rule]", "\"\<<\\\\>\>\""}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<EndCharacter\>\"", "\[Rule]", "\"\<</>\>\""}]}], 
   "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "M2TeXToString"}]}], "Input",
 CellChangeTimes->{{3.7225847893112407`*^9, 3.7225848977104406`*^9}, {
  3.7225849313923674`*^9, 3.7225849472402735`*^9}}],

Cell[BoxData["\<\"<\\\\>dostuff[val2]{val1}</>\"\>"], "Output",
 CellChangeTimes->{
  3.7226829155159407`*^9, {3.722714304186268*^9, 3.7227143175280313`*^9}, {
   3.722714455517924*^9, 3.722714459805169*^9}}]
}, Open  ]],

Cell["\<\
With parameter list, the type of options can be given by the user\
\>", "Text",
 CellChangeTimes->{{3.7225849559607725`*^9, 3.72258497356878*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"M2TeXCommand", "[", "\[IndentingNewLine]", 
   RowBox[{"\"\<dostuff\>\"", ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<ParameterList\>\"", "\[Rule]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"M2TeXOption", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<op1\>\"", ",", "\"\<op11\>\""}], "}"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"M2TeXOptionOptional", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<op2\>\"", ",", "\"\<op22\>\""}], "}"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"M2TeXOption", "[", "\"\<op3\>\"", "]"}]}], 
      "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "M2TeXToString"}]}], "Input",
 CellChangeTimes->{{3.7225849827443047`*^9, 3.722585011726962*^9}, {
  3.7225851948034334`*^9, 3.722585201122795*^9}, {3.7225999956118746`*^9, 
  3.722600001311883*^9}}],

Cell[BoxData["\<\"\\\\dostuff{op1, op11}[op2, op22]{op3}\"\>"], "Output",
 CellChangeTimes->{
  3.7226829155209413`*^9, {3.7227143041912684`*^9, 3.722714317534032*^9}, 
   3.7227144598111696`*^9}]
}, Open  ]],

Cell["Typical behavioud", "Text",
 CellChangeTimes->{{3.7225852097412877`*^9, 3.722585230797492*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"M2TeXCommand", "[", "\"\<dostuff\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "M2TeXToString"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M2TeXCommand", "[", 
   RowBox[{"\"\<dostuff\>\"", ",", "\"\<opt\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "M2TeXToString"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M2TeXCommand", "[", 
   RowBox[{"\"\<dostuff\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<opt\>\"", ",", "\"\<OPT\>\""}], "}"}], ",", 
    "\"\<opt2\>\""}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "M2TeXToString"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M2TeXCommand", "[", 
   RowBox[{"\"\<dostuff\>\"", ",", ",", "\"\<opt2\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "M2TeXToString"}]}], "Input",
 CellChangeTimes->{{3.7225852327226024`*^9, 3.7225852716278276`*^9}, {
   3.7226124849679637`*^9, 3.722612504487991*^9}, 3.7227145300321856`*^9, 
   3.722714800018628*^9}],

Cell[BoxData["\<\"\\\\dostuff\"\>"], "Output",
 CellChangeTimes->{
  3.722682915525942*^9, {3.7227143041972685`*^9, 3.722714317540032*^9}, 
   3.7227144598171697`*^9, {3.722714530517214*^9, 3.7227145568587203`*^9}, {
   3.7227145895865917`*^9, 3.7227146084416704`*^9}, {3.7227146837559786`*^9, 
   3.7227147040431385`*^9}, {3.7227147975244856`*^9, 3.722714800349647*^9}}],

Cell[BoxData["\<\"\\\\dostuff{opt}\"\>"], "Output",
 CellChangeTimes->{
  3.722682915525942*^9, {3.7227143041972685`*^9, 3.722714317540032*^9}, 
   3.7227144598171697`*^9, {3.722714530517214*^9, 3.7227145568587203`*^9}, {
   3.7227145895865917`*^9, 3.7227146084416704`*^9}, {3.7227146837559786`*^9, 
   3.7227147040431385`*^9}, {3.7227147975244856`*^9, 3.7227148003526473`*^9}}],

Cell[BoxData["\<\"\\\\dostuff[opt2]{opt, OPT}\"\>"], "Output",
 CellChangeTimes->{
  3.722682915525942*^9, {3.7227143041972685`*^9, 3.722714317540032*^9}, 
   3.7227144598171697`*^9, {3.722714530517214*^9, 3.7227145568587203`*^9}, {
   3.7227145895865917`*^9, 3.7227146084416704`*^9}, {3.7227146837559786`*^9, 
   3.7227147040431385`*^9}, {3.7227147975244856`*^9, 3.722714800353647*^9}}],

Cell[BoxData["\<\"\\\\dostuff[opt2]\"\>"], "Output",
 CellChangeTimes->{
  3.722682915525942*^9, {3.7227143041972685`*^9, 3.722714317540032*^9}, 
   3.7227144598171697`*^9, {3.722714530517214*^9, 3.7227145568587203`*^9}, {
   3.7227145895865917`*^9, 3.7227146084416704`*^9}, {3.7227146837559786`*^9, 
   3.7227147040431385`*^9}, {3.7227147975244856`*^9, 3.722714800355647*^9}}]
}, Open  ]],

Cell["Packages", "Text",
 CellChangeTimes->{{3.72258561469945*^9, 3.7225856164925528`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"M2TeXPackage", "[", 
   RowBox[{"\"\<name\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<opt1\>\"", ",", "\"\<opt2\>\""}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "M2TeXToString"}]}], "Input",
 CellChangeTimes->{{3.722585618624675*^9, 3.72258568183629*^9}}],

Cell[BoxData["\<\"\\\\usepackage[opt1, opt2]{name}\"\>"], "Output",
 CellChangeTimes->{
  3.722682915535942*^9, {3.7227143042062693`*^9, 3.7227143175500326`*^9}, 
   3.72271445982617*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Environments", "Section",
 CellChangeTimes->{{3.7225854325950346`*^9, 3.722585434467141*^9}}],

Cell["Full definition", "Text",
 CellChangeTimes->{{3.7225872158710318`*^9, 3.722587218507183*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"M2TeXEnvironment", "[", "\[IndentingNewLine]", 
   RowBox[{"\"\<document\>\"", ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<ParameterList\>\"", "\[Rule]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"M2TeXOption", "[", "\"\<op1\>\"", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"M2TeXOptionOptional", "[", "\"\<op2\>\"", "]"}]}], 
      "\[IndentingNewLine]", "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<StartCommand\>\"", "\[Rule]", "\"\<START\>\""}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<EndCommand\>\"", "\[Rule]", "\"\<END\>\""}]}], 
   "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "M2TeXToString"}]}], "Input",
 CellChangeTimes->{{3.722586984847818*^9, 3.7225870244580836`*^9}, {
  3.7225871753857164`*^9, 3.722587204836401*^9}, {3.7226002717022614`*^9, 
  3.7226002969622965`*^9}}],

Cell[BoxData["\<\"START{op1}[op2]\\nEND\"\>"], "Output",
 CellChangeTimes->{
  3.722682915540942*^9, {3.7227143042112694`*^9, 3.7227143175570326`*^9}, 
   3.7227144598321705`*^9}]
}, Open  ]],

Cell["Short definitions", "Text",
 CellChangeTimes->{{3.7225872318119435`*^9, 3.7225872348241158`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"M2TeXEnvironment", "[", "\"\<document\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "M2TeXToString"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M2TeXEnvironment", "[", 
   RowBox[{"\"\<document\>\"", ",", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"M2TeXOption", "[", "\"\<op1\>\"", "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"M2TeXOptionOptional", "[", "\"\<op2\>\"", "]"}]}], 
     "\[IndentingNewLine]", "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "M2TeXToString"}]}], "Input",
 CellChangeTimes->{{3.722587224646534*^9, 3.7225872478958635`*^9}}],

Cell[BoxData["\<\"\\\\begin[]{document}\\n\\\\end[]{document}\"\>"], "Output",
 CellChangeTimes->{
  3.7226829155469427`*^9, {3.7227143042182703`*^9, 3.722714317563033*^9}, 
   3.722714459839171*^9, 3.7227146799427605`*^9}],

Cell[BoxData["\<\"\\\\begin[]{document}{op1}[op2]\\n\\\\end[]{document}\"\>"],\
 "Output",
 CellChangeTimes->{
  3.7226829155469427`*^9, {3.7227143042182703`*^9, 3.722714317563033*^9}, 
   3.722714459839171*^9, 3.7227146799487605`*^9}]
}, Open  ]],

Cell["Add content to environment", "Text",
 CellChangeTimes->{{3.722599262206848*^9, 3.7225992739368644`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"doc", "=", 
   RowBox[{"M2TeXEnvironment", "[", "\"\<document\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"M2TeXAddToEnvironment", "[", 
  RowBox[{"doc", ",", 
   RowBox[{"M2TeXCommand", "[", 
    RowBox[{"\"\<section\>\"", ",", "\"\<Introduction\>\""}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"M2TeXAddToEnvironment", "[", 
  RowBox[{"doc", ",", "\"\<Bla bla bla...\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"doc", "//", "M2TeXToString"}]}], "Input",
 CellChangeTimes->{{3.7225992840468783`*^9, 3.7225993702369995`*^9}}],

Cell[BoxData["\<\"\\\\begin[]{document}\\n\\\\section[]{Introduction}\\nBla \
bla bla...\\n\\\\end[]{document}\"\>"], "Output",
 CellChangeTimes->{
  3.722682915554943*^9, {3.7227143042252703`*^9, 3.7227143175710335`*^9}, 
   3.7227144598471713`*^9}]
}, Open  ]],

Cell["\<\
When an environment is added the next items are added inside that environment\
\>", "Text",
 CellChangeTimes->{{3.722599382307016*^9, 3.7225994224670725`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"doc", "=", 
   RowBox[{"M2TeXEnvironment", "[", "\"\<document\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"M2TeXAddToEnvironment", "[", 
  RowBox[{"doc", ",", 
   RowBox[{"M2TeXEnvironment", "[", "\"\<picture\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"M2TeXAddToEnvironment", "[", 
  RowBox[{"doc", ",", "\"\<Bla bla bla...\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"doc", "//", "M2TeXToString"}]}], "Input",
 CellChangeTimes->{{3.7225994398470964`*^9, 3.7225994577671213`*^9}}],

Cell[BoxData["\<\"\\\\begin[]{document}\\n\\\\begin[]{picture}\\nBla bla \
bla...\\n\\\\end[]{picture}\\n\\\\end[]{document}\"\>"], "Output",
 CellChangeTimes->{
  3.7226829155599437`*^9, {3.7227143042302704`*^9, 3.722714317578034*^9}, 
   3.7227144598541718`*^9}]
}, Open  ]],

Cell["\<\
The M2TeXCloseActiveEnvironment command closes the active environment and \
returns to the previous one\
\>", "Text",
 CellChangeTimes->{{3.722599382307016*^9, 3.7225994224670725`*^9}, {
  3.7225994897581663`*^9, 3.722599517168205*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"doc", "=", 
   RowBox[{"M2TeXEnvironment", "[", "\"\<document\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"M2TeXAddToEnvironment", "[", 
  RowBox[{"doc", ",", 
   RowBox[{"M2TeXEnvironment", "[", "\"\<picture\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"M2TeXAddToEnvironment", "[", 
  RowBox[{"doc", ",", "\"\<picture\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"M2TeXCloseActiveEnvironment", "[", "doc", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"M2TeXAddToEnvironment", "[", 
  RowBox[{"doc", ",", "\"\<Bla bla bla...\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"doc", "//", "M2TeXToString"}]}], "Input",
 CellChangeTimes->{{3.7225994398470964`*^9, 3.7225994577671213`*^9}, {
   3.722599525679217*^9, 3.722599548030248*^9}, 3.7225997851205797`*^9}],

Cell[BoxData["\<\"\\\\begin[]{document}\\n\\\\begin[]{picture}\\npicture\\n\\\
\\end[]{picture}\\nBla bla bla...\\n\\\\end[]{document}\"\>"], "Output",
 CellChangeTimes->{
  3.7226829155659437`*^9, {3.7227143042372713`*^9, 3.7227143175840344`*^9}, 
   3.7227144598601723`*^9}]
}, Open  ]],

Cell["The main environment can not be closed", "Text",
 CellChangeTimes->{{3.722599567940276*^9, 3.722599577190289*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"doc", "=", 
   RowBox[{"M2TeXEnvironment", "[", "\"\<document\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"M2TeXAddToEnvironment", "[", 
  RowBox[{"doc", ",", 
   RowBox[{"M2TeXEnvironment", "[", "\"\<picture\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"M2TeXAddToEnvironment", "[", 
  RowBox[{"doc", ",", "\"\<Text1\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"M2TeXCloseActiveEnvironment", "[", "doc", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"M2TeXAddToEnvironment", "[", 
  RowBox[{"doc", ",", "\"\<Text2\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"M2TeXCloseActiveEnvironment", "[", "doc", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"M2TeXAddToEnvironment", "[", 
  RowBox[{"doc", ",", "\"\<Text3\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"doc", "//", "M2TeXToString"}]}], "Input",
 CellChangeTimes->{{3.7225995886803055`*^9, 3.722599607830332*^9}, {
  3.7225997576605415`*^9, 3.722599808450613*^9}, {3.722600087972004*^9, 
  3.7226000947320137`*^9}}],

Cell[BoxData["\<\"Error, depth not long enough!\"\>"], "Print",
 CellChangeTimes->{
  3.722682915571944*^9, {3.7227143042432714`*^9, 3.722714317591035*^9}, 
   3.7227144598671727`*^9}],

Cell[BoxData["\<\"\\\\begin[]{document}\\n\\\\begin[]{picture}\\nText1\\n\\\\\
end[]{picture}\\nText2\\nText3\\n\\\\end[]{document}\"\>"], "Output",
 CellChangeTimes->{
  3.7226829155789447`*^9, {3.7227143042452717`*^9, 3.7227143175930347`*^9}, 
   3.722714459869173*^9}]
}, Open  ]],

Cell["The preamble is a list of items and is read/write", "Text",
 CellChangeTimes->{{3.7226554912862363`*^9, 3.7226555229660482`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"M2TeXToString", "/@", 
  RowBox[{"doc", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "\"\<Preamble\>\""}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7226554415683928`*^9, 3.7226554861989455`*^9}, {
  3.722655530199462*^9, 3.722655531478535*^9}}],

Cell[BoxData[
 RowBox[{"Missing", "[", 
  RowBox[{"\<\"KeyAbsent\"\>", ",", "\<\"Preamble\"\>"}], "]"}]], "Output",
 CellChangeTimes->{
  3.7226829155959454`*^9, {3.722714304287274*^9, 3.722714317614036*^9}, 
   3.722714459890174*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"doc", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "\"\<Preamble\>\""}], "]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Missing", "[", 
  RowBox[{"\<\"KeyAbsent\"\>", ",", "\<\"Preamble\"\>"}], "]"}]], "Output",
 CellChangeTimes->{
  3.7226829156029463`*^9, {3.722714304293274*^9, 3.722714317622037*^9}, 
   3.7227144598971744`*^9}]
}, Open  ]],

Cell["Close all closes all child environments", "Text",
 CellChangeTimes->{{3.7226579806766214`*^9, 3.722657988437065*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"doc", "=", 
   RowBox[{"M2TeXEnvironment", "[", "\"\<document\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"M2TeXAddToEnvironment", "[", 
  RowBox[{"doc", ",", 
   RowBox[{"M2TeXEnvironment", "[", "\"\<picture\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"M2TeXAddToEnvironment", "[", 
  RowBox[{"doc", ",", 
   RowBox[{"M2TeXEnvironment", "[", "\"\<pictureChild\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"M2TeXCloseAll", "[", "doc", "]"}], "\[IndentingNewLine]", 
 RowBox[{"M2TeXAddToEnvironment", "[", 
  RowBox[{"doc", ",", "\"\<content\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"doc", "//", "M2TeXToString"}]}], "Input",
 CellChangeTimes->{{3.722657994933437*^9, 3.722658027701311*^9}}],

Cell[BoxData[
 RowBox[{"Sequence", "[", 
  RowBox[{"1", ",", 
   RowBox[{"Key", "[", "\<\"Content\"\>", "]"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.7226829156089463`*^9, {3.7227143042992744`*^9, 3.7227143176280365`*^9}, 
   3.7227144599031744`*^9}],

Cell[BoxData["\<\"\\\\begin[]{document}\\n\\\\begin[]{picture}\\n\\\\begin[]{\
pictureChild}\\n\\\\end[]{pictureChild}\\n\\\\end[]{picture}\\ncontent\\n\\\\\
end[]{document}\"\>"], "Output",
 CellChangeTimes->{
  3.7226829156089463`*^9, {3.7227143042992744`*^9, 3.7227143176280365`*^9}, 
   3.7227144599051747`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Documents", "Section",
 CellChangeTimes->{{3.722655582389447*^9, 3.722655584117546*^9}}],

Cell["\<\
Documents have the document environment and a document class and a preamble\
\>", "Text",
 CellChangeTimes->{{3.7226136074895353`*^9, 3.7226136180195503`*^9}, {
  3.7226556012055235`*^9, 3.722655633733384*^9}, {3.7226561049943385`*^9, 
  3.72265610518635*^9}, {3.7226563836322756`*^9, 3.7226564008802624`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"doc", "=", 
   RowBox[{"M2TeXDocument", "[", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"Command", " ", "for", " ", "document", " ", "class"}], " ", 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"M2TeXCommand", "[", 
      RowBox[{
      "\"\<documentclass\>\"", ",", "\"\<scrartcl\>\"", ",", "\"\<11pt\>\""}],
       "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Optional", ":", " ", "Preamble"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"M2TeXPackage", "[", "\"\<amsmath\>\"", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"M2TeXPackage", "[", 
        RowBox[{"\"\<MinionPro\>\"", ",", "\"\<lf\>\""}], "]"}]}], 
      "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"doc", "//", "M2TeXToString"}]}], "Input",
 CellChangeTimes->{{3.7226136250695596`*^9, 3.7226136544296007`*^9}, {
   3.7226220711351166`*^9, 3.7226220761051235`*^9}, 3.7226560486911182`*^9, {
   3.722656097923934*^9, 3.722656171410137*^9}, {3.7226562484815454`*^9, 
   3.722656367472351*^9}, {3.722656405120505*^9, 3.7226564215524445`*^9}}],

Cell[BoxData["\<\"\\\\documentclass[11pt]{scrartcl}\\n\\n\\\\usepackage[]{\
amsmath}\\n\\\\usepackage[lf]{MinionPro}\\n\\n\\\\begin[]{document}\\n\\\\end[\
]{document}\"\>"], "Output",
 CellChangeTimes->{
  3.722682915615947*^9, {3.722714304307275*^9, 3.7227143176370373`*^9}, 
   3.7227144599111753`*^9}]
}, Open  ]],

Cell["Documents behave the same way as environments", "Text",
 CellChangeTimes->{{3.7226563648151994`*^9, 3.7226563765118685`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"M2TeXAddToEnvironment", "[", 
  RowBox[{"doc", ",", "\"\<content\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"doc", "//", "M2TeXToString"}]}], "Input"],

Cell[BoxData["\<\"\\\\documentclass[11pt]{scrartcl}\\n\\n\\\\usepackage[]{\
amsmath}\\n\\\\usepackage[lf]{MinionPro}\\n\\n\\\\begin[]{document}\\ncontent\
\\n\\\\end[]{document}\"\>"], "Output",
 CellChangeTimes->{
  3.7226829156219473`*^9, {3.7227143043132753`*^9, 3.722714317643038*^9}, 
   3.7227144599181757`*^9}]
}, Open  ]],

Cell["Header is read/write", "Text",
 CellChangeTimes->{{3.7226562019218826`*^9, 3.7226562126894984`*^9}, {
  3.7226818299092183`*^9, 3.7226818305992193`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"M2TeXToString", "/@", 
  RowBox[{"doc", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", " ", "\"\<Header\>\""}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.722656234009718*^9, 3.7226562423851967`*^9}, {
  3.7226564296319065`*^9, 3.722656434304174*^9}, {3.7226818372192287`*^9, 
  3.7226818378892293`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"\\\\usepackage[]{amsmath}\"\>", 
   ",", "\<\"\\\\usepackage[lf]{MinionPro}\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7226829156269474`*^9, {3.722714304319276*^9, 3.7227143176500382`*^9}, 
   3.7227144599241757`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{
    RowBox[{"doc", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", " ", "\"\<Header\>\""}], "]"}], "]"}], ",", 
    "\"\<% created with M2TeX\>\""}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"doc", "//", "M2TeXToString"}]}], "Input",
 CellChangeTimes->{{3.7226564440157294`*^9, 3.722656466544018*^9}, {
  3.722681841239234*^9, 3.722681841859235*^9}}],

Cell[BoxData["\<\"\\\\documentclass[11pt]{scrartcl}\\n\\n\\\\usepackage[]{\
amsmath}\\n\\\\usepackage[lf]{MinionPro}\\n% created with \
M2TeX\\n\\n\\\\begin[]{document}\\ncontent\\n\\\\end[]{document}\"\>"], \
"Output",
 CellChangeTimes->{
  3.722682915632948*^9, {3.722714304325276*^9, 3.7227143176570387`*^9}, 
   3.7227144599301763`*^9}]
}, Open  ]],

Cell["\<\
Headers are taken from subitems, same header items are skipped after one time\
\>", "Text",
 CellChangeTimes->{{3.722681852979251*^9, 3.7226819164393396`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"M2TeXAddToEnvironment", "[", 
  RowBox[{"doc", ",", 
   RowBox[{"M2TeXCommand", "[", 
    RowBox[{"\"\<new\>\"", ",", 
     RowBox[{"\"\<Header\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"M2TeXPackage", "[", "\"\<color\>\"", "]"}], "}"}]}]}], 
    "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"M2TeXAddToEnvironment", "[", 
  RowBox[{"doc", ",", 
   RowBox[{"M2TeXCommand", "[", 
    RowBox[{"\"\<new\>\"", ",", 
     RowBox[{"\"\<Header\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"M2TeXPackage", "[", "\"\<color2\>\"", "]"}], "}"}]}]}], 
    "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"M2TeXAddToEnvironment", "[", 
  RowBox[{"doc", ",", 
   RowBox[{"M2TeXCommand", "[", 
    RowBox[{"\"\<new\>\"", ",", 
     RowBox[{"\"\<Header\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"M2TeXPackage", "[", "\"\<color\>\"", "]"}], "}"}]}]}], 
    "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"doc", "//", "M2TeXToString"}]}], "Input",
 CellChangeTimes->{{3.7226818922493057`*^9, 3.7226819556193943`*^9}}],

Cell[BoxData["\<\"\\\\documentclass[11pt]{scrartcl}\\n\\n\\\\usepackage[]{\
amsmath}\\n\\\\usepackage[lf]{MinionPro}\\n% created with \
M2TeX\\n\\\\usepackage[]{color}\\n\\\\usepackage[]{color2}\\n\\n\\\\begin[]{\
document}\\ncontent\\n\\\\new[]{}\\n\\\\new[]{}\\n\\\\new[]{}\\n\\\\end[]{\
document}\"\>"], "Output",
 CellChangeTimes->{
  3.722682915637948*^9, {3.7227143043312764`*^9, 3.7227143176630387`*^9}, 
   3.7227144599371767`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Document templates", "Section",
 CellChangeTimes->{{3.7225873584901896`*^9, 3.7225873647125454`*^9}, {
  3.722600504917588*^9, 3.722600528717622*^9}, {3.722613466649338*^9, 
  3.722613469839342*^9}}],

Cell["Following templates are available", "Text",
 CellChangeTimes->{{3.7226135919695134`*^9, 3.722613601919527*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"M2TeXTemplates", "[", "\"\<article\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "M2TeXToString"}]}], "Input",
 CellChangeTimes->{{3.7226009744092455`*^9, 3.722601001259283*^9}, {
  3.722601052539355*^9, 3.7226010561893597`*^9}, {3.722612704998272*^9, 
  3.722612706688274*^9}}],

Cell[BoxData["\<\"\\\\documentclass[]{scrartcl}\\n\\n\\\\usepackage[T1]{\
fontenc}\\n\\\\usepackage[utf8]{inputenc}\\n\\\\usepackage[]{amsmath}\\n\\n\\\
\\begin[]{document}\\n\\\\end[]{document}\"\>"], "Output",
 CellChangeTimes->{
  3.7226829156439486`*^9, {3.7227143043372765`*^9, 3.722714317670039*^9}, 
   3.7227144599431767`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"M2TeXTemplates", "[", "\"\<standalone\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "M2TeXToString"}]}], "Input",
 CellChangeTimes->{{3.72261326787906*^9, 3.7226133128791227`*^9}, {
  3.7226133669791985`*^9, 3.7226133783592143`*^9}, {3.7226134136492634`*^9, 
  3.722613494489377*^9}, {3.7226819678594112`*^9, 3.7226819693794136`*^9}}],

Cell[BoxData["\<\"\\\\documentclass[class=scrartcl]{standalone}\\n\\n\\\\\
usepackage[T1]{fontenc}\\n\\\\usepackage[utf8]{inputenc}\\n\\\\usepackage[]{\
amsmath}\\n\\\\usepackage[]{tikz}\\n\\\\usepackage[]{pgfplots}\\n\\\\\
pgfplotsset[]{compat=newest,tick label style={font=\\\\footnotesize}}\\n\\n\\\
\\begin[]{document}\\n\\\\end[]{document}\"\>"], "Output",
 CellChangeTimes->{
  3.722682915649949*^9, {3.722714304342277*^9, 3.7227143176760397`*^9}, 
   3.7227144599491773`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["TikZ tools", "Section",
 CellChangeTimes->{{3.7226138604198895`*^9, 3.722613883039921*^9}}],

Cell["Command for TikZ", "Text",
 CellChangeTimes->{{3.7226166317778373`*^9, 3.7226166360150795`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"M2TeXTikZCommand", "[", "\"\<node\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "M2TeXToString"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M2TeXTikZCommand", "[", 
   RowBox[{"\"\<node\>\"", ",", "\"\<at (0,0)\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "M2TeXToString"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M2TeXTikZCommand", "[", 
   RowBox[{"\"\<node\>\"", ",", "\"\<at (0,0)\>\"", ",", "\"\<black\>\""}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "M2TeXToString"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M2TeXTikZCommand", "[", 
   RowBox[{"\"\<node\>\"", ",", ",", "\"\<black\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "M2TeXToString"}]}], "Input",
 CellChangeTimes->{{3.722615682626292*^9, 3.722615692236306*^9}, {
   3.7226158217364874`*^9, 3.722615822006488*^9}, {3.722616043036797*^9, 
   3.722616050786808*^9}, {3.7226162585534897`*^9, 3.7226162683590508`*^9}, 
   3.7226163316776724`*^9, 3.7226164297322807`*^9, {3.7226164624741535`*^9, 
   3.72261650839578*^9}, {3.722616601073081*^9, 3.7226166265215364`*^9}, {
   3.722618684947883*^9, 3.722618753747979*^9}, {3.7226189087181964`*^9, 
   3.7226189201882124`*^9}}],

Cell[BoxData["\<\"\\\\node[]{};\"\>"], "Output",
 CellChangeTimes->{
  3.722682915655949*^9, {3.722714304348277*^9, 3.7227143176830397`*^9}, 
   3.7227144599561777`*^9}],

Cell[BoxData["\<\"\\\\node[]{} at (0,0);\"\>"], "Output",
 CellChangeTimes->{
  3.722682915655949*^9, {3.722714304348277*^9, 3.7227143176830397`*^9}, 
   3.7227144599581776`*^9}],

Cell[BoxData["\<\"\\\\node[black]{} at (0,0);\"\>"], "Output",
 CellChangeTimes->{
  3.722682915655949*^9, {3.722714304348277*^9, 3.7227143176830397`*^9}, 
   3.722714459959178*^9}],

Cell[BoxData["\<\"\\\\node[black]{};\"\>"], "Output",
 CellChangeTimes->{
  3.722682915655949*^9, {3.722714304348277*^9, 3.7227143176830397`*^9}, 
   3.722714459960178*^9}]
}, Open  ]],

Cell["Axis for Pgf Plots", "Text",
 CellChangeTimes->{{3.722616641987421*^9, 3.7226166499938793`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"M2TeXTikZAxis", "[", "\"\<meins\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "M2TeXToString"}]}], "Input",
 CellChangeTimes->{{3.7226189568282633`*^9, 3.7226189609282694`*^9}, {
  3.7226190045883303`*^9, 3.7226190052283316`*^9}}],

Cell[BoxData["\<\"\\\\begin[]{axis}[meins]\\n\\\\end[]{axis}\"\>"], "Output",
 CellChangeTimes->{
  3.7226829156669493`*^9, {3.722714304357278*^9, 3.722714317694041*^9}, 
   3.722714459966178*^9}]
}, Open  ]],

Cell["2D Plot from datapoints", "Text",
 CellChangeTimes->{{3.7226190775303607`*^9, 3.7226190849403715`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"M2TeXTikZPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "4"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"black", ",", "white"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "M2TeXToString"}]}], "Input",
 CellChangeTimes->{{3.722619490480939*^9, 3.7226195297509937`*^9}, {
  3.7226196010710936`*^9, 3.722619611781109*^9}, {3.72262054102341*^9, 
  3.7226205479134192`*^9}}],

Cell[BoxData["\<\"\\\\addplot[black, white]{} coordinates{%\\n(1., \
3.)%\\n(2., 4.)%\\n};\"\>"], "Output",
 CellChangeTimes->{
  3.7226829156719503`*^9, {3.722714304362278*^9, 3.7227143177000413`*^9}, 
   3.7227144599721785`*^9}]
}, Open  ]],

Cell["2D Plot from datapoints, with non numeric values", "Text",
 CellChangeTimes->{{3.7226190775303607`*^9, 3.7226190849403715`*^9}, {
  3.72262094058735*^9, 3.7226209457573566`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"M2TeXTikZPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "4"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"black", ",", "white"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "M2TeXToString"}]}], "Input",
 CellChangeTimes->{{3.722619490480939*^9, 3.7226195297509937`*^9}, {
  3.7226196010710936`*^9, 3.722619611781109*^9}, {3.72262054102341*^9, 
  3.7226205479134192`*^9}, {3.7226209486673613`*^9, 3.7226209525373664`*^9}}],

Cell[BoxData["\<\"Non numeric value!\"\>"], "Print",
 CellChangeTimes->{
  3.7226829156779504`*^9, {3.7227143043682785`*^9, 3.7227143177080417`*^9}, 
   3.722714459979179*^9}],

Cell[BoxData["\<\"\\\\addplot[black, white]{} coordinates{%\\n(1., \
3.)%\\n};\"\>"], "Output",
 CellChangeTimes->{
  3.7226829156789503`*^9, {3.722714304369279*^9, 3.7227143177090416`*^9}, 
   3.722714459980179*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Global document structure", "Section",
 CellChangeTimes->{{3.722620981247407*^9, 3.722620987397415*^9}}],

Cell["\<\
A global document or environment can be set to simplify the commands\
\>", "Text",
 CellChangeTimes->{{3.722621092137562*^9, 3.722621109147586*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"M2TeXSetGlobal", "[", 
  RowBox[{"M2TeXEnvironment", "[", "\"\<doc\>\"", "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"M2TeXToStringGlobal", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.722621271157812*^9, 3.72262130495786*^9}}],

Cell[BoxData["\<\"\\\\begin[]{doc}\\n\\\\end[]{doc}\"\>"], "Output",
 CellChangeTimes->{
  3.722682915684951*^9, 3.722713512191969*^9, {3.722714304374279*^9, 
   3.722714317715042*^9}, 3.7227144599861794`*^9}]
}, Open  ]],

Cell["\<\
Now the items are added to the global item if no parent item is given\
\>", "Text",
 CellChangeTimes->{{3.722621281267827*^9, 3.7226212967878485`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"M2TeXAddToEnvironment", "[", "\"\<text\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"M2TeXToStringGlobal", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.7226213106078677`*^9, 3.72262131934788*^9}}],

Cell[BoxData["\<\"\\\\begin[]{doc}\\ntext\\n\\\\end[]{doc}\"\>"], "Output",
 CellChangeTimes->{
  3.722682915689951*^9, {3.7227143043802795`*^9, 3.722714317722042*^9}, 
   3.72271445999218*^9}]
}, Open  ]],

Cell["If a string is given, a template will be set", "Text",
 CellChangeTimes->{{3.722621092137562*^9, 3.722621109147586*^9}, {
  3.7226214313880367`*^9, 3.722621441378051*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"M2TeXSetGlobal", "[", "\"\<article\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"M2TeXToStringGlobal", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.722621271157812*^9, 3.72262130495786*^9}, {
  3.722621422968025*^9, 3.7226214273180313`*^9}}],

Cell[BoxData["\<\"\\\\documentclass[]{scrartcl}\\n\\n\\\\usepackage[T1]{\
fontenc}\\n\\\\usepackage[utf8]{inputenc}\\n\\\\usepackage[]{amsmath}\\n\\n\\\
\\begin[]{document}\\n\\\\end[]{document}\"\>"], "Output",
 CellChangeTimes->{
  3.722682915694951*^9, {3.7227143043852797`*^9, 3.7227143177280426`*^9}, 
   3.72271445999918*^9}]
}, Open  ]],

Cell["\<\
Get the global document and make changes (mainly for header purposes)\
\>", "Text",
 CellChangeTimes->{{3.7227099069188824`*^9, 3.722709930348915*^9}, {
  3.722713301768247*^9, 3.722713302498248*^9}, {3.7227134835653315`*^9, 
  3.722713502208398*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"M2TeXSetGlobal", "[", "\"\<article\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"global", "=", 
   RowBox[{"M2TeXGetGlobal", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"global", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", " ", "\"\<Header\>\""}], "]"}], "]"}], "=", 
   RowBox[{"{", "\"\<% comment in header\>\"", "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M2TeXSetGlobal", "[", "global", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"M2TeXToStringGlobal", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.722713502975442*^9, 3.7227135821609707`*^9}}],

Cell[BoxData["\<\"\\\\documentclass[]{scrartcl}\\n\\n% comment in \
header\\n\\n\\\\begin[]{document}\\n\\\\end[]{document}\"\>"], "Output",
 CellChangeTimes->{{3.722713563110881*^9, 3.7227135827700057`*^9}, {
   3.72271430439028*^9, 3.7227143177350435`*^9}, 3.7227144600051804`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compile LaTeX", "Section",
 CellChangeTimes->{{3.7226214591180754`*^9, 3.722621466288086*^9}, {
  3.722622041465075*^9, 3.7226220446850796`*^9}, {3.7226565047672043`*^9, 
  3.7226565049112124`*^9}}],

Cell["\<\
Set the current directory, the pdf will be copied to this location\
\>", "Text",
 CellChangeTimes->{{3.7226237912866383`*^9, 3.7226237967666464`*^9}, {
  3.722656507999389*^9, 3.7226565167828913`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.722623797966648*^9, 3.7226238040366564`*^9}}],

Cell["Get plot points", "Text",
 CellChangeTimes->{{3.722656574559196*^9, 3.722656577791381*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"TableFun", "[", "fun_", "]"}], ":=", 
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"fun", "[", "x", "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", 
      RowBox[{"3", "\[Pi]"}], ",", 
      RowBox[{"3", 
       RowBox[{"\[Pi]", "/", "500"}]}]}], "}"}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tableSin", "=", 
   RowBox[{"TableFun", "[", "Sin", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tableCos", "=", 
   RowBox[{"TableFun", "[", "Cos", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tableLog", "=", 
   RowBox[{"TableFun", "[", "Log", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7226576095923967`*^9, 3.722657609911415*^9}, 
   3.722657654839985*^9, {3.7226580613492355`*^9, 3.7226580614442415`*^9}, 
   3.7226582395234265`*^9, 3.722658329171554*^9}],

Cell["Plot options", "Text",
 CellChangeTimes->{{3.7226565898390703`*^9, 3.722656591391159*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"width", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"plotOptions", "=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\"\<width=\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{
       RowBox[{"N", "[", "width", "]"}], ",", "CForm"}], "]"}], "<>", 
     "\"\<cm\>\""}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<height=\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{
       RowBox[{"N", "[", 
        RowBox[{"width", "/", "GoldenRatio"}], "]"}], ",", "CForm"}], "]"}], 
     "<>", "\"\<cm\>\""}], ",", "\[IndentingNewLine]", 
    "\"\<scale only axis\>\""}], "\[IndentingNewLine]", "}"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"width=5.cm\"\>", ",", "\<\"height=3.090169943749474cm\"\>", 
   ",", "\<\"scale only axis\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.722682915734954*^9, {3.722714304421282*^9, 3.722714317769045*^9}, 
   3.7227144600371823`*^9}]
}, Open  ]],

Cell["\<\
Generate an test example (add some preamble definitons to get multiple pages \
in standalone)\
\>", "Text",
 CellChangeTimes->{{3.722622055945095*^9, 3.722622060685102*^9}, {
  3.722656531119712*^9, 3.7226565395191917`*^9}, {3.72265692394818*^9, 
  3.7226569361088753`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"doc", "=", 
   RowBox[{"M2TeXTemplates", "[", "\"\<standalone\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{
    RowBox[{"doc", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "\"\<Header\>\""}], "]"}], "]"}], ",", 
    RowBox[{"M2TeXCommand", "[", 
     RowBox[{"\"\<standaloneconfig\>\"", ",", "\"\<multi\>\""}], "]"}]}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{
    RowBox[{"doc", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "\"\<Header\>\""}], "]"}], "]"}], ",", 
    RowBox[{"M2TeXCommand", "[", 
     RowBox[{"\"\<newenvironment\>\"", ",", 
      RowBox[{"\"\<ParameterList\>\"", "\[Rule]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"M2TeXOption", "[", "\"\<alone\>\"", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"M2TeXOption", "[", 
          RowBox[{"M2TeXCommand", "[", "\"\<ignorespaces\>\"", "]"}], "]"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"M2TeXOption", "[", 
          RowBox[{"M2TeXCommand", "[", "\"\<ignorespacesafterend\>\"", "]"}], 
          "]"}]}], "\[IndentingNewLine]", "}"}]}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{
    RowBox[{"doc", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "\"\<Header\>\""}], "]"}], "]"}], ",", 
    RowBox[{"M2TeXCommand", "[", 
     RowBox[{"\"\<standaloneenv\>\"", ",", "\"\<alone\>\""}], "]"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7226221339652042`*^9, 3.722622155855235*^9}, {
   3.7226234221961217`*^9, 3.722623422306122*^9}, {3.7226234873962135`*^9, 
   3.7226234877162137`*^9}, 3.7226242538812866`*^9, {3.72262496348428*^9, 
   3.7226249920943203`*^9}, {3.7226250371143827`*^9, 
   3.7226250843544493`*^9}, {3.7226257729264135`*^9, 3.722625802757455*^9}, {
   3.722656541744319*^9, 3.7226565433274097`*^9}, 3.722656604735922*^9, {
   3.722656745294962*^9, 3.722656755806563*^9}, {3.7226568126858163`*^9, 
   3.7226568132618494`*^9}, {3.7226569383010006`*^9, 
   3.7226571623668165`*^9}, {3.722657195546715*^9, 3.722657240186268*^9}, {
   3.7226573191937866`*^9, 3.72265733026642*^9}, {3.722657379690247*^9, 
   3.722657392858*^9}, 3.7226574468250866`*^9, {3.722657760007*^9, 
   3.722657768390479*^9}, 3.7226585627366695`*^9, {3.7226820100494704`*^9, 
   3.7226820141794763`*^9}}],

Cell["\<\
Create two pages with the same plot, one is clipped the other one not\
\>", "Text",
 CellChangeTimes->{{3.7226575148079753`*^9, 3.7226575313999243`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"M2TeXAddToEnvironment", "[", 
   RowBox[{"doc", ",", 
    RowBox[{"M2TeXEnvironment", "[", "\"\<alone\>\"", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M2TeXAddToEnvironment", "[", 
   RowBox[{"doc", ",", 
    RowBox[{"M2TeXTikZ", "[", "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"M2TeXAddToEnvironment", "[", 
  RowBox[{"doc", ",", 
   RowBox[{"M2TeXTikZAxis", "[", 
    RowBox[{"{", 
     RowBox[{"plotOptions", ",", "\"\<title=Full Plot\>\""}], "}"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"M2TeXAddToEnvironment", "[", 
  RowBox[{"doc", ",", 
   RowBox[{"M2TeXTikZPlot", "[", 
    RowBox[{"tableSin", ",", "\"\<blue, thick\>\""}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"M2TeXAddToEnvironment", "[", 
  RowBox[{"doc", ",", 
   RowBox[{"M2TeXTikZPlot", "[", 
    RowBox[{"tableCos", ",", "\"\<red, thick\>\""}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"M2TeXAddToEnvironment", "[", 
  RowBox[{"doc", ",", 
   RowBox[{"M2TeXTikZPlot", "[", 
    RowBox[{"tableLog", ",", "\"\<green, thick\>\""}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M2TeXCloseAll", "[", "doc", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7226221339652042`*^9, 3.722622155855235*^9}, {
   3.7226234221961217`*^9, 3.722623422306122*^9}, {3.7226234873962135`*^9, 
   3.7226234877162137`*^9}, 3.7226242538812866`*^9, {3.72262496348428*^9, 
   3.7226249920943203`*^9}, {3.7226250371143827`*^9, 
   3.7226250843544493`*^9}, {3.7226257729264135`*^9, 3.722625802757455*^9}, {
   3.722656541744319*^9, 3.7226565433274097`*^9}, 3.722656604735922*^9, {
   3.722656745294962*^9, 3.722656755806563*^9}, {3.7226568126858163`*^9, 
   3.7226568132618494`*^9}, {3.7226569383010006`*^9, 
   3.7226571097718086`*^9}, {3.7226574770488157`*^9, 
   3.7226575800237055`*^9}, {3.722657683320614*^9, 3.722657771846677*^9}, {
   3.7226579537340803`*^9, 3.722657958838372*^9}, {3.7226618852247047`*^9, 
   3.7226619152724233`*^9}, {3.722661947241252*^9, 3.7226619696245317`*^9}, 
   3.7226620197674*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"M2TeXAddToEnvironment", "[", 
   RowBox[{"doc", ",", 
    RowBox[{"M2TeXEnvironment", "[", "\"\<alone\>\"", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M2TeXAddToEnvironment", "[", 
   RowBox[{"doc", ",", 
    RowBox[{"M2TeXTikZ", "[", "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"M2TeXAddToEnvironment", "[", 
  RowBox[{"doc", ",", 
   RowBox[{"M2TeXTikZAxis", "[", 
    RowBox[{"{", 
     RowBox[{"plotOptions", ",", 
      RowBox[{"\"\<title=Clipped Plot,ymin=-2,xmax=\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"N", "[", 
         RowBox[{"2", "\[Pi]"}], "]"}], "]"}]}]}], "}"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"M2TeXAddToEnvironment", "[", 
  RowBox[{"doc", ",", 
   RowBox[{"M2TeXTikZPlot", "[", 
    RowBox[{"tableSin", ",", "\"\<blue, thick\>\""}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"M2TeXAddToEnvironment", "[", 
  RowBox[{"doc", ",", 
   RowBox[{"M2TeXTikZPlot", "[", 
    RowBox[{"tableCos", ",", "\"\<red, thick\>\""}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"M2TeXAddToEnvironment", "[", 
  RowBox[{"doc", ",", 
   RowBox[{"M2TeXTikZPlot", "[", 
    RowBox[{"tableLog", ",", "\"\<green, thick\>\""}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7226575417525167`*^9, 3.7226575426485677`*^9}, {
  3.7226578136390676`*^9, 3.7226578141660976`*^9}, {3.7226582485959454`*^9, 
  3.722658300162895*^9}, {3.7226619748078284`*^9, 3.7226620134160366`*^9}}],

Cell["\<\
Execute the example, the default output is a png copy of each page of the \
resulting pdf file
The option \[OpenCurlyDoubleQuote]SaveTeX\[CloseCurlyDoubleQuote] also copies \
the tex file in the working directory\
\>", "Text",
 CellChangeTimes->{{3.7226221679852524`*^9, 3.7226221735952597`*^9}, {
  3.72262517793458*^9, 3.722625189914597*^9}, {3.722658095332179*^9, 
  3.72265813608451*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"M2TeXGeneratePDF", "[", 
  RowBox[{"\"\<test\>\"", ",", "doc", ",", 
   RowBox[{"\"\<SaveTeX\>\"", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7226224435217514`*^9, 3.7226224438917522`*^9}, {
   3.7226225639349203`*^9, 3.722622572164932*^9}, 3.7226226807750835`*^9, {
   3.722622726375148*^9, 3.722622747485177*^9}, {3.722622789265236*^9, 
   3.722622789985237*^9}, {3.722622841495309*^9, 3.7226228431053114`*^9}, {
   3.722623782956627*^9, 3.722623807066661*^9}, {3.7226239069968004`*^9, 
   3.7226239439368525`*^9}, {3.7226242988823495`*^9, 
   3.7226243597234344`*^9}, {3.722624695613905*^9, 3.7226246957339053`*^9}, 
   3.7226247584039927`*^9, {3.7226251925146008`*^9, 3.722625192614601*^9}, {
   3.7226258066974607`*^9, 3.7226258089974637`*^9}, 3.7226566249270773`*^9, {
   3.722656659855075*^9, 3.7226566790541725`*^9}, {3.7226572689069104`*^9, 
   3.722657269146924*^9}, 3.7226581554926205`*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Non numeric value!\"\>"], "Print",
 CellChangeTimes->{
  3.722682915901963*^9, {3.722714304642294*^9, 3.7227143179360547`*^9}, 
   3.722714460208192*^9}],

Cell[BoxData["\<\"Non numeric value!\"\>"], "Print",
 CellChangeTimes->{
  3.722682915901963*^9, {3.722714304642294*^9, 3.7227143179360547`*^9}, 
   3.722714460242194*^9}],

Cell[BoxData["\<\"LaTeX Error!\"\>"], "Print",
 CellChangeTimes->{
  3.722682915901963*^9, {3.722714304642294*^9, 3.7227143179360547`*^9}, 
   3.7227144635573835`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"! Use of \\\\pgfplotsset doesn't match its \
definition.\\nl.8 \\\\pgfplotsset[\\n                 ]{compat=newest,tick \
label style={font=\\\\footnotesize}}\"\>", 
       ",", "\<\"!  ==> Fatal error occurred, no output PDF file \
produced!\\nTranscript written on M2TeX_0.log.\"\>"}], "}"}], ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.722682922646349*^9, {3.7227143099145956`*^9, 3.7227143213122473`*^9}, 
   3.7227144635623837`*^9}]
}, Open  ]],

Cell["\<\
This option \[OpenCurlyDoubleQuote]OutputPDF\[CloseCurlyDoubleQuote] imports \
the pdf file and not a png copy. Use with caution, there are some problems \
when importing pdfs into mathematica, see the non cliped plots\
\>", "Text",
 CellChangeTimes->{{3.7226257327453566`*^9, 3.7226257477353783`*^9}, {
  3.722658141091797*^9, 3.722658147653172*^9}, {3.7226582536672354`*^9, 
  3.722658254931308*^9}, {3.7226612937558746`*^9, 3.722661295723987*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"M2TeXGeneratePDF", "[", 
  RowBox[{"\"\<test\>\"", ",", "doc", ",", 
   RowBox[{"\"\<OutputPDF\>\"", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7226257559553895`*^9, 3.722625761335397*^9}, {
  3.722625818647477*^9, 3.7226258431775117`*^9}, {3.722658159843869*^9, 
  3.722658162324011*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Non numeric value!\"\>"], "Print",
 CellChangeTimes->{3.72268292283836*^9, 3.7227143214262543`*^9, 
  3.722714463701392*^9}],

Cell[BoxData["\<\"Non numeric value!\"\>"], "Print",
 CellChangeTimes->{3.72268292283836*^9, 3.7227143214262543`*^9, 
  3.7227144637353935`*^9}],

Cell[BoxData["\<\"LaTeX Error!\"\>"], "Print",
 CellChangeTimes->{3.72268292283836*^9, 3.7227143214262543`*^9, 
  3.7227144672085924`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"! Use of \\\\pgfplotsset doesn't match its \
definition.\\nl.8 \\\\pgfplotsset[\\n                 ]{compat=newest,tick \
label style={font=\\\\footnotesize}}\"\>", 
       ",", "\<\"!  ==> Fatal error occurred, no output PDF file \
produced!\\nTranscript written on M2TeX_0.log.\"\>"}], "}"}], ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7226829288417034`*^9, 3.7227143247834463`*^9, 
  3.7227144672105923`*^9}]
}, Open  ]],

Cell["\<\
When an error / warning / overflow box occours the messages are output in the \
seccont list item\
\>", "Text",
 CellChangeTimes->{{3.7226586111674395`*^9, 3.7226586376789556`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"doc", "=", 
   RowBox[{"M2TeXTemplates", "[", "\"\<article\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"M2TeXAddToEnvironment", "[", 
  RowBox[{"doc", ",", 
   RowBox[{"M2TeXCommand", "[", "\"\<lab\\\\el\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"out", "=", 
  RowBox[{
   RowBox[{"M2TeXGeneratePDF", "[", 
    RowBox[{"\"\<test\>\"", ",", "doc"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.722658647775533*^9, 3.7226586773272233`*^9}, {
   3.722658749246337*^9, 3.7226587509904366`*^9}, {3.722659126363907*^9, 
   3.7226591426358376`*^9}, {3.7226593916900826`*^9, 3.72265939181809*^9}, {
   3.72265952732084*^9, 3.722659536969392*^9}, 3.722660935423379*^9, 
   3.7226718895310297`*^9}],

Cell[BoxData["\<\"LaTeX Error!\"\>"], "Print",
 CellChangeTimes->{3.7226829295787454`*^9, 3.722714325447484*^9, 
  3.7227144678886313`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"! LaTeX Error: Missing \\\\begin{document}.\\n\\nSee the \
LaTeX manual or LaTeX Companion for explanation.\"\>", 
     ",", "\<\"!  ==> Fatal error occurred, no output PDF file \
produced!\\nTranscript written on M2TeX_0.log.\"\>"}], "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7226829295797453`*^9, 3.7227143254484844`*^9, 
  3.7227144678906317`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"doc", "=", 
   RowBox[{"M2TeXTemplates", "[", "\"\<article\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"M2TeXAddToEnvironment", "[", 
  RowBox[{"doc", ",", "\"\<text\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"M2TeXAddToEnvironment", "[", 
  RowBox[{"doc", ",", 
   RowBox[{"M2TeXCommand", "[", 
    RowBox[{"\"\<label\>\"", ",", "\"\<newLabel\>\""}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M2TeXGeneratePDF", "[", 
   RowBox[{"\"\<test\>\"", ",", "doc"}], "]"}], "[", 
  RowBox[{"[", "2", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7226718845410223`*^9, 3.722671886491025*^9}}],

Cell[BoxData["\<\"LaTeX Error!\"\>"], "Print",
 CellChangeTimes->{3.7227143260965214`*^9, 3.722714468544669*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"! LaTeX Error: Missing \\\\begin{document}.\\n\\nSee the \
LaTeX manual or LaTeX Companion for explanation.\"\>", 
     ",", "\<\"!  ==> Fatal error occurred, no output PDF file \
produced!\\nTranscript written on M2TeX_0.log.\"\>"}], "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.722682932546915*^9, 3.722714326098521*^9, 
  3.722714468546669*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"doc", "=", 
   RowBox[{"M2TeXTemplates", "[", "\"\<article\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"M2TeXAddToEnvironment", "[", 
  RowBox[{
  "doc", ",", 
   "\"\<abcdefg1234567890abcdefg1234567890abcdefg1234567890abcdefg1234567890ab\
cdefg1234567890abcdefg1234567890\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"out", "=", 
  RowBox[{
   RowBox[{"M2TeXGeneratePDF", "[", 
    RowBox[{"\"\<test\>\"", ",", "doc"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7226587599879513`*^9, 3.7226587853584023`*^9}, {
   3.722658822525528*^9, 3.722658834558216*^9}, {3.7226588791177654`*^9, 
   3.72265912082759*^9}, {3.722659251659073*^9, 3.7226592826828475`*^9}, {
   3.7226609468480325`*^9, 3.7226609583186884`*^9}, 3.7226718917510324`*^9}],

Cell[BoxData["\<\"LaTeX Error!\"\>"], "Print",
 CellChangeTimes->{3.722714326760559*^9, 3.7227144692247076`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"! LaTeX Error: Missing \\\\begin{document}.\\n\\nSee the \
LaTeX manual or LaTeX Companion for explanation.\"\>", 
     ",", "\<\"!  ==> Fatal error occurred, no output PDF file \
produced!\\nTranscript written on M2TeX_0.log.\"\>"}], "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7226829353660765`*^9, 3.7227143267625594`*^9, 
  3.722714469226708*^9}]
}, Open  ]],

Cell["Compile global document", "Text",
 CellChangeTimes->{{3.722674916531622*^9, 3.7226749204216275`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"M2TeXSetGlobal", "[", "\"\<standalone\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"M2TeXAddToEnvironment", "[", "\"\<Text\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"M2TeXGeneratePDF", "[", "\"\<test\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.722674939912655*^9, 3.7226750248827744`*^9}}],

Cell[BoxData["\<\"LaTeX Error!\"\>"], "Print",
 CellChangeTimes->{3.7227143293847094`*^9, 3.7227144718078556`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"! Use of \\\\pgfplotsset doesn't match its \
definition.\\nl.8 \\\\pgfplotsset[\\n                 ]{compat=newest,tick \
label style={font=\\\\footnotesize}}\"\>", 
       ",", "\<\"!  ==> Fatal error occurred, no output PDF file \
produced!\\nTranscript written on M2TeX_0.log.\"\>"}], "}"}], ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.72268293945831*^9, 3.72271432939371*^9, 
  3.7227144718128557`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Other useful stuff", "Title",
 CellChangeTimes->{{3.722669787086128*^9, 3.7226697882061296`*^9}, {
  3.7226716077396345`*^9, 3.722671610719639*^9}}],

Cell["\<\
Get lines from plot, usually there is a reasonable amount of datapoints\
\>", "Text",
 CellChangeTimes->{{3.7226716158396463`*^9, 3.7226716206196527`*^9}, {
  3.722671750480835*^9, 3.7226717516808367`*^9}, {3.7226737094690046`*^9, 
  3.722673729089032*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plt", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Gamma", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "2"}], ",", "4"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "10"}], ",", "10"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lines", "=", 
   RowBox[{
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"plt", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Head", "@", "#"}], "==", "Line"}], "&"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "/@", "lines"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", "lines", "]"}]}], "Input",
 CellChangeTimes->{{3.7226697931161366`*^9, 3.72266988116626*^9}, {
  3.7226699241819973`*^9, 3.7226699876520863`*^9}, {3.722670098103241*^9, 
  3.722670136503295*^9}, {3.7226708978119345`*^9, 3.7226708981919355`*^9}, {
  3.7226711043099174`*^9, 3.72267112358902*^9}, {3.722671218932473*^9, 
  3.7226712282450056`*^9}, {3.7226716231496563`*^9, 3.7226716739197273`*^9}, {
  3.722671706379773*^9, 3.7226717432408247`*^9}, {3.7226737306590347`*^9, 
  3.7226737362990427`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"234", ",", "214", ",", "368", ",", "2", ",", "2"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7226829395973186`*^9, 3.722714329599722*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.008333333333333333], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
w1yQkX1obJI5/f/96P8AiiRGHA==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.008333333333333333], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.008333333333333333], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
      "]]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.008333333333333333], 
     AbsoluteThickness[1.6], 
     LineBox[{{-0.9999236515318567, 10.}, {-0.9999068543201514, -10.}}]}, 
    {RGBColor[0.528488, 0.470624, 0.701351], PointSize[0.008333333333333333], 
     AbsoluteThickness[1.6], 
     LineBox[{{-0.00003234109129283936, -10.}, {-0.000015608328786101962`, 
      10.}}]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-1.9472818317029155`, 3.9999998775510206`}, {-10., 10.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7226829395973186`*^9, 3.722714329716728*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plt", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"x", "^", "i"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "5"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lines", "=", 
   RowBox[{
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"plt", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Head", "@", "#"}], "==", "Line"}], "&"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "/@", "lines"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", "lines", "]"}]}], "Input",
 CellChangeTimes->{{3.7226719646011343`*^9, 3.7226720493512535`*^9}, {
  3.7226737399990473`*^9, 3.7226737401390476`*^9}, {3.7226753738813887`*^9, 
  3.7226754004409075`*^9}, {3.7226777055761566`*^9, 3.7226777088233423`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"433", ",", "574", ",", "996", ",", "1306", ",", "1601"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.722682939718325*^9, 3.722683083674559*^9, 
  3.722714329768731*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.005555555555555556], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
/B/WmFyj
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.005555555555555556], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
8z+aARXb
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.005555555555555556], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
aX5GL4+A/78vDv9/Xxz+D1i2Bgo=
      "]]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.005555555555555556], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
ay+1oP+7jxH+/z7G/wEaYf7S
      "]]}, 
    {RGBColor[0.528488, 0.470624, 0.701351], PointSize[0.005555555555555556], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-1.999999918367347, 1.999999918367347}, {-0.9999999731943618, 
   0.9999999999939281}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.722682939718325*^9, 3.722683083674559*^9, 
  3.722714329798733*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"width", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotOptions", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\"\<width=\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"N", "[", "width", "]"}], ",", "CForm"}], "]"}], "<>", 
       "\"\<cm\>\""}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<height=\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"N", "[", 
          RowBox[{"width", "/", "GoldenRatio"}], "]"}], ",", "CForm"}], "]"}],
        "<>", "\"\<cm\>\""}], ",", "\[IndentingNewLine]", 
      "\"\<scale only axis\>\""}], "\[IndentingNewLine]", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"M2TeXSetGlobal", "[", "\"\<standalone\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"M2TeXAddToEnvironment", "[", 
  RowBox[{"M2TeXTikZ", "[", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"M2TeXAddToEnvironment", "[", 
  RowBox[{"M2TeXTikZAxis", "[", "plotOptions", "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"M2TeXAddToEnvironment", "[", 
    RowBox[{"M2TeXTikZPlot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"lines", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<very thick,color=mycolor\>\"", "<>", 
       RowBox[{"ToString", "[", "i", "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<Header\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"M2TeXCommand", "[", 
         RowBox[{"\"\<definecolor\>\"", ",", 
          RowBox[{"\"\<ParameterList\>\"", "\[Rule]", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"M2TeXOption", "[", 
              RowBox[{"\"\<mycolor\>\"", "<>", 
               RowBox[{"ToString", "[", "i", "]"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"M2TeXOption", "[", "\"\<rgb\>\"", "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"M2TeXOption", "[", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"ColorData", "[", 
                   RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "[", 
                 RowBox[{"[", "j", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", "3"}], "}"}]}], "]"}], "]"}]}], 
            "\[IndentingNewLine]", "}"}]}]}], "]"}], "\[IndentingNewLine]", 
        "}"}]}]}], "]"}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]",
    ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"Length", "@", "lines"}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"M2TeXGeneratePDF", "[", 
  RowBox[{"\"\<pdf\>\"", ",", 
   RowBox[{"\"\<SaveTeX\>\"", "\[Rule]", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7226754405071993`*^9, 3.7226755838943586`*^9}, {
   3.7226756414626513`*^9, 3.722675667814159*^9}, {3.7226757702930202`*^9, 
   3.722675787479003*^9}, {3.722675943268914*^9, 3.7226760189322414`*^9}, {
   3.722676096909607*^9, 3.722676100459612*^9}, {3.7226761515793133`*^9, 
   3.722676154437476*^9}, {3.722676208637576*^9, 3.7226762125678015`*^9}, {
   3.722676267008703*^9, 3.72267640452889*^9}, {3.722676489074755*^9, 
   3.7226764955201235`*^9}, {3.7226765412797413`*^9, 
   3.7226765456489906`*^9}, {3.7226766495219316`*^9, 
   3.7226767167517776`*^9}, {3.7226767517757807`*^9, 3.7226769697592487`*^9}, 
   3.7226770344639497`*^9, {3.7226770648276863`*^9, 3.722677129005357*^9}, {
   3.722677162237258*^9, 3.722677216172343*^9}, {3.722677312662683*^9, 
   3.722677333112853*^9}, {3.7226775200425444`*^9, 3.72267752119361*^9}, {
   3.7226776082805915`*^9, 3.722677641912515*^9}, {3.722682067759551*^9, 
   3.722682171200696*^9}, {3.722682622424328*^9, 3.722682626644334*^9}, {
   3.722682854918475*^9, 3.7226828601807756`*^9}}],

Cell[BoxData["\<\"LaTeX Error!\"\>"], "Print",
 CellChangeTimes->{3.722714333360937*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"! Use of \\\\pgfplotsset doesn't match its \
definition.\\nl.8 \\\\pgfplotsset[\\n                 ]{compat=newest,tick \
label style={font=\\\\footnotesize}}\"\>", 
       ",", "\<\"!  ==> Fatal error occurred, no output PDF file \
produced!\\nTranscript written on M2TeX_0.log.\"\>"}], "}"}], ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7226829478467903`*^9, 3.7227143333619366`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"width", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotOptions", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\"\<width=\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"N", "[", "width", "]"}], ",", "CForm"}], "]"}], "<>", 
       "\"\<cm\>\""}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<height=\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"N", "[", 
          RowBox[{"width", "/", "GoldenRatio"}], "]"}], ",", "CForm"}], "]"}],
        "<>", "\"\<cm\>\""}], ",", "\[IndentingNewLine]", 
      "\"\<scale only axis\>\""}], "\[IndentingNewLine]", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"M2TeXSetGlobal", "[", "\"\<standalone\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"M2TeXAddToEnvironment", "[", 
  RowBox[{"M2TeXTikZ", "[", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"M2TeXAddToEnvironment", "[", 
  RowBox[{"M2TeXTikZAxis", "[", "plotOptions", "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"M2TeXAddToEnvironment", "[", 
    RowBox[{"M2TeXTikZPlot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"lines", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<very thick,color=mycolor\>\"", "<>", 
       RowBox[{"ToString", "[", "i", "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<Header\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"M2TeXCommand", "[", 
         RowBox[{"\"\<definecolor\>\"", ",", 
          RowBox[{"\"\<ParameterList\>\"", "\[Rule]", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"M2TeXOption", "[", 
              RowBox[{"\"\<mycolor\>\"", "<>", 
               RowBox[{"ToString", "[", "i", "]"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"M2TeXOption", "[", "\"\<rgb\>\"", "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"M2TeXOption", "[", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"ColorData", "[", 
                   RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "[", 
                 RowBox[{"[", "j", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", "3"}], "}"}]}], "]"}], "]"}]}], 
            "\[IndentingNewLine]", "}"}]}]}], "]"}], "\[IndentingNewLine]", 
        "}"}]}]}], "]"}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]",
    ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"Length", "@", "lines"}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", "M2TeXToStringGlobal"}], "Input",
 CellChangeTimes->{{3.7226831106261005`*^9, 3.722683114027295*^9}}],

Cell[BoxData["M2TeXToStringGlobal"], "Output",
 CellChangeTimes->{3.7227143335299463`*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{944, 982},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>1.3 Inherited,
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (February 25, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 195, 3, 131, "Title"],
Cell[778, 27, 120, 2, 39, "Input"],
Cell[CellGroupData[{
Cell[923, 33, 89, 1, 91, "Section"],
Cell[1015, 36, 109, 1, 39, "Text"],
Cell[CellGroupData[{
Cell[1149, 41, 807, 19, 165, "Input"],
Cell[1959, 62, 281, 3, 39, "Output"]
}, Open  ]],
Cell[2255, 68, 104, 1, 39, "Text"],
Cell[CellGroupData[{
Cell[2384, 73, 133, 2, 39, "Input"],
Cell[2520, 77, 73, 1, 39, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2642, 84, 94, 1, 91, "Section"],
Cell[2739, 87, 137, 1, 39, "Text"],
Cell[CellGroupData[{
Cell[2901, 92, 583, 15, 115, "Input"],
Cell[3487, 109, 240, 4, 39, "Output"],
Cell[3730, 115, 253, 4, 39, "Output"]
}, Open  ]],
Cell[3998, 122, 102, 1, 39, "Text"],
Cell[CellGroupData[{
Cell[4125, 127, 307, 7, 65, "Input"],
Cell[4435, 136, 223, 3, 39, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[4707, 145, 95, 1, 91, "Section"],
Cell[4805, 148, 101, 1, 39, "Text"],
Cell[CellGroupData[{
Cell[4931, 153, 837, 16, 240, "Input"],
Cell[5771, 171, 208, 3, 39, "Output"]
}, Open  ]],
Cell[5994, 177, 156, 3, 39, "Text"],
Cell[CellGroupData[{
Cell[6175, 184, 964, 21, 240, "Input"],
Cell[7142, 207, 196, 3, 39, "Output"]
}, Open  ]],
Cell[7353, 213, 101, 1, 39, "Text"],
Cell[CellGroupData[{
Cell[7479, 218, 1021, 24, 215, "Input"],
Cell[8503, 244, 371, 5, 39, "Output"],
Cell[8877, 251, 378, 5, 39, "Output"],
Cell[9258, 258, 387, 5, 39, "Output"],
Cell[9648, 265, 377, 5, 39, "Output"]
}, Open  ]],
Cell[10040, 273, 91, 1, 39, "Text"],
Cell[CellGroupData[{
Cell[10156, 278, 324, 8, 65, "Input"],
Cell[10483, 288, 187, 3, 39, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10719, 297, 99, 1, 91, "Section"],
Cell[10821, 300, 99, 1, 39, "Text"],
Cell[CellGroupData[{
Cell[10945, 305, 929, 18, 265, "Input"],
Cell[11877, 325, 179, 3, 65, "Output"]
}, Open  ]],
Cell[12071, 331, 103, 1, 39, "Text"],
Cell[CellGroupData[{
Cell[12199, 336, 673, 15, 190, "Input"],
Cell[12875, 353, 223, 3, 65, "Output"],
Cell[13101, 358, 235, 4, 65, "Output"]
}, Open  ]],
Cell[13351, 365, 110, 1, 39, "Text"],
Cell[CellGroupData[{
Cell[13486, 370, 593, 14, 115, "Input"],
Cell[14082, 386, 250, 4, 115, "Output"]
}, Open  ]],
Cell[14347, 393, 169, 3, 39, "Text"],
Cell[CellGroupData[{
Cell[14541, 400, 553, 13, 115, "Input"],
Cell[15097, 415, 264, 4, 140, "Output"]
}, Open  ]],
Cell[15376, 422, 246, 5, 64, "Text"],
Cell[CellGroupData[{
Cell[15647, 431, 827, 18, 165, "Input"],
Cell[16477, 451, 276, 4, 165, "Output"]
}, Open  ]],
Cell[16768, 458, 120, 1, 39, "Text"],
Cell[CellGroupData[{
Cell[16913, 463, 1037, 22, 215, "Input"],
Cell[17953, 487, 184, 3, 28, "Print"],
Cell[18140, 492, 271, 4, 190, "Output"]
}, Open  ]],
Cell[18426, 499, 135, 1, 39, "Text"],
Cell[CellGroupData[{
Cell[18586, 504, 275, 6, 39, "Input"],
Cell[18864, 512, 234, 5, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19135, 522, 118, 3, 39, "Input"],
Cell[19256, 527, 236, 5, 39, "Output"]
}, Open  ]],
Cell[19507, 535, 123, 1, 39, "Text"],
Cell[CellGroupData[{
Cell[19655, 540, 774, 17, 165, "Input"],
Cell[20432, 559, 255, 6, 39, "Output"],
Cell[20690, 567, 315, 5, 190, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[21054, 578, 94, 1, 91, "Section"],
Cell[21151, 581, 320, 5, 39, "Text"],
Cell[CellGroupData[{
Cell[21496, 590, 1261, 27, 265, "Input"],
Cell[22760, 619, 305, 5, 190, "Output"]
}, Open  ]],
Cell[23080, 627, 131, 1, 39, "Text"],
Cell[CellGroupData[{
Cell[23236, 632, 180, 3, 65, "Input"],
Cell[23419, 637, 317, 5, 215, "Output"]
}, Open  ]],
Cell[23751, 645, 159, 2, 39, "Text"],
Cell[CellGroupData[{
Cell[23935, 651, 331, 7, 39, "Input"],
Cell[24269, 660, 268, 6, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24574, 671, 422, 10, 65, "Input"],
Cell[24999, 683, 340, 6, 240, "Output"]
}, Open  ]],
Cell[25354, 692, 169, 3, 39, "Text"],
Cell[CellGroupData[{
Cell[25548, 699, 1061, 26, 190, "Input"],
Cell[26612, 727, 439, 7, 365, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[27100, 740, 205, 3, 91, "Section"],
Cell[27308, 745, 117, 1, 39, "Text"],
Cell[CellGroupData[{
Cell[27450, 750, 335, 7, 65, "Input"],
Cell[27788, 759, 334, 5, 215, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28159, 769, 391, 7, 65, "Input"],
Cell[28553, 778, 482, 7, 290, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[29084, 791, 97, 1, 91, "Section"],
Cell[29184, 794, 102, 1, 39, "Text"],
Cell[CellGroupData[{
Cell[29311, 799, 1276, 26, 215, "Input"],
Cell[30590, 827, 169, 3, 39, "Output"],
Cell[30762, 832, 178, 3, 39, "Output"],
Cell[30943, 837, 181, 3, 39, "Output"],
Cell[31127, 842, 172, 3, 39, "Output"]
}, Open  ]],
Cell[31314, 848, 102, 1, 39, "Text"],
Cell[CellGroupData[{
Cell[31441, 853, 287, 6, 65, "Input"],
Cell[31731, 861, 196, 3, 65, "Output"]
}, Open  ]],
Cell[31942, 867, 109, 1, 39, "Text"],
Cell[CellGroupData[{
Cell[32076, 872, 565, 16, 65, "Input"],
Cell[32644, 890, 230, 4, 115, "Output"]
}, Open  ]],
Cell[32889, 897, 184, 2, 39, "Text"],
Cell[CellGroupData[{
Cell[33098, 903, 615, 16, 65, "Input"],
Cell[33716, 921, 175, 3, 28, "Print"],
Cell[33894, 926, 216, 4, 90, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[34159, 936, 110, 1, 91, "Section"],
Cell[34272, 939, 158, 3, 39, "Text"],
Cell[CellGroupData[{
Cell[34455, 946, 258, 5, 65, "Input"],
Cell[34716, 953, 209, 3, 65, "Output"]
}, Open  ]],
Cell[34940, 959, 161, 3, 39, "Text"],
Cell[CellGroupData[{
Cell[35126, 966, 225, 4, 65, "Input"],
Cell[35354, 972, 193, 3, 90, "Output"]
}, Open  ]],
Cell[35562, 978, 177, 2, 39, "Text"],
Cell[CellGroupData[{
Cell[35764, 984, 270, 5, 65, "Input"],
Cell[36037, 991, 331, 5, 215, "Output"]
}, Open  ]],
Cell[36383, 999, 261, 5, 39, "Text"],
Cell[CellGroupData[{
Cell[36669, 1008, 650, 17, 140, "Input"],
Cell[37322, 1027, 283, 3, 165, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[37654, 1036, 204, 3, 91, "Section"],
Cell[37861, 1041, 211, 4, 39, "Text"],
Cell[38075, 1047, 191, 4, 39, "Input"],
Cell[38269, 1053, 97, 1, 39, "Text"],
Cell[38369, 1056, 990, 25, 190, "Input"],
Cell[39362, 1083, 96, 1, 39, "Text"],
Cell[CellGroupData[{
Cell[39483, 1088, 691, 17, 165, "Input"],
Cell[40177, 1107, 278, 6, 39, "Output"]
}, Open  ]],
Cell[40470, 1116, 284, 6, 39, "Text"],
Cell[40757, 1124, 2444, 55, 215, "Input"],
Cell[43204, 1181, 163, 3, 39, "Text"],
Cell[43370, 1186, 2089, 45, 190, "Input"],
Cell[45462, 1233, 1513, 37, 215, "Input"],
Cell[46978, 1272, 402, 8, 64, "Text"],
Cell[CellGroupData[{
Cell[47405, 1284, 944, 14, 39, "Input"],
Cell[CellGroupData[{
Cell[48374, 1302, 171, 3, 28, "Print"],
Cell[48548, 1307, 171, 3, 28, "Print"],
Cell[48722, 1312, 167, 3, 28, "Print"]
}, Open  ]],
Cell[48904, 1318, 645, 16, 165, "Output"]
}, Open  ]],
Cell[49564, 1337, 460, 7, 64, "Text"],
Cell[CellGroupData[{
Cell[50049, 1348, 332, 6, 39, "Input"],
Cell[CellGroupData[{
Cell[50406, 1358, 142, 2, 28, "Print"],
Cell[50551, 1362, 144, 2, 28, "Print"],
Cell[50698, 1366, 138, 2, 28, "Print"]
}, Open  ]],
Cell[50851, 1371, 617, 15, 165, "Output"]
}, Open  ]],
Cell[51483, 1389, 191, 4, 39, "Text"],
Cell[CellGroupData[{
Cell[51699, 1397, 793, 18, 90, "Input"],
Cell[52495, 1417, 139, 2, 28, "Print"],
Cell[52637, 1421, 488, 11, 140, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53162, 1437, 662, 16, 115, "Input"],
Cell[53827, 1455, 112, 1, 28, "Print"],
Cell[53942, 1458, 482, 11, 140, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54461, 1474, 831, 18, 140, "Input"],
Cell[55295, 1494, 112, 1, 28, "Print"],
Cell[55410, 1497, 486, 11, 140, "Output"]
}, Open  ]],
Cell[55911, 1511, 107, 1, 39, "Text"],
Cell[CellGroupData[{
Cell[56043, 1516, 327, 6, 90, "Input"],
Cell[56373, 1524, 114, 1, 28, "Print"],
Cell[56490, 1527, 611, 15, 165, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[57162, 1549, 154, 2, 131, "Title"],
Cell[57319, 1553, 267, 5, 39, "Text"],
Cell[CellGroupData[{
Cell[57611, 1562, 1390, 35, 115, "Input"],
Cell[59004, 1599, 178, 4, 39, "Output"],
Cell[59185, 1605, 19119, 327, 308, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78341, 1937, 1159, 32, 115, "Input"],
Cell[79503, 1971, 207, 5, 39, "Output"],
Cell[79713, 1978, 103863, 1720, 309, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[183613, 3703, 4046, 85, 590, "Input"],
Cell[187662, 3790, 88, 1, 28, "Print"],
Cell[187753, 3793, 590, 14, 165, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[188380, 3812, 2956, 68, 590, "Input"],
Cell[191339, 3882, 90, 1, 39, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

